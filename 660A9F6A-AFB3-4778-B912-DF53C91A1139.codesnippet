<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDECodeSnippetCompletionPrefix</key>
	<string>init.BaseViewProtocol</string>
	<key>IDECodeSnippetCompletionScopes</key>
	<array>
		<string>All</string>
	</array>
	<key>IDECodeSnippetContents</key>
	<string>@protocol BaseViewProtocol &lt;BaseProtocol&gt;

@optional
/// 作用于-(void)layoutSubviews的圆切角参数
@property(nonatomic,assign)UIRectCorner layoutSubviewsRectCorner;
@property(nonatomic,assign)CGSize layoutSubviewsRectCornerSize;
/// 记录该View的Masonry约束情况
@property(nonatomic,strong)NSMutableArray &lt;MASConstraint *&gt;*constraintMutArr;
/// 视图长、宽、高的定义
@property(nonatomic,assign)CGSize thisViewSize;
/// 标记是HeaderView 还是 FooterView
@property(nonatomic,assign)JobsHeaderFooterViewStyle headerFooterViewStyle;
/// 具体由子类进行复写【数据定UI】【如果所传参数为基本数据类型，那么包装成对象NSNumber进行转化承接】
-(void)richElementsInViewWithModel:(id _Nullable)model;
#pragma mark —— 用类方法定义
/// 具体由子类进行复写【数据定宽】【如果所传参数为基本数据类型，那么包装成对象NSNumber进行转化承接】
+(CGFloat)viewWidthWithModel:(id _Nullable)model;
/// 具体由子类进行复写【数据定高】【如果所传参数为基本数据类型，那么包装成对象NSNumber进行转化承接】
+(CGFloat)viewHeightWithModel:(id _Nullable)model;
/// 具体由子类进行复写【数据定高】【如果所传参数为基本数据类型，那么包装成对象NSNumber进行转化承接】
+(CGFloat)heightForFooterInSection:(id _Nullable)model;
/// 具体由子类进行复写【数据定高】【如果所传参数为基本数据类型，那么包装成对象NSNumber进行转化承接】
+(CGFloat)heightForHeaderInSection:(id _Nullable)model;
/// 具体由子类进行复写【数据尺寸】【如果所传参数为基本数据类型，那么包装成对象NSNumber进行转化承接】
+(CGSize)viewSizeWithModel:(id _Nullable)model;
/// 具体由子类进行复写【数据Frame】【如果所传参数为基本数据类型，那么包装成对象NSNumber进行转化承接】
+(CGRect)viewFrameWithModel:(id _Nullable)model;
/// 具体由子类进行复写【FrameX的变化量】【如果所传参数为基本数据类型，那么包装成对象NSNumber进行转化承接】
+(CGFloat)viewChangeXWithModel:(id _Nullable)model;
/// 具体由子类进行复写【FrameY的变化量】【如果所传参数为基本数据类型，那么包装成对象NSNumber进行转化承接】
+(CGFloat)viewChangeYWithModel:(id _Nullable)model;
/// 具体由子类进行复写【FrameWidth的变化量】【如果所传参数为基本数据类型，那么包装成对象NSNumber进行转化承接】
+(CGFloat)viewChangeWidthWithModel:(id _Nullable)model;
/// 具体由子类进行复写【FrameHeight的变化量】【如果所传参数为基本数据类型，那么包装成对象NSNumber进行转化承接】
+(CGFloat)viewChangeHeightWithModel:(id _Nullable)model;
/// 具体由子类进行复写【数据尺寸】【如果所传参数为基本数据类型，那么包装成对象NSNumber进行转化承接】
/// UICollectionViewDelegateFlowLayout
+(CGSize)collectionReusableViewSizeWithModel:(id _Nullable)model;
/// 数据（字符串）定宽
+(CGFloat)widthByData:(UIViewModel *_Nonnull)data;
/// 数据（字符串）定高
+(CGFloat)heightByData:(UIViewModel *_Nonnull)data;
#pragma mark —— 用实例方法定义
/// 具体由子类进行复写【数据定宽】【如果所传参数为基本数据类型，那么包装成对象NSNumber进行转化承接】
-(CGFloat)viewWidthWithModel:(id _Nullable)model;
/// 具体由子类进行复写【数据定高】【如果所传参数为基本数据类型，那么包装成对象NSNumber进行转化承接】
-(CGFloat)viewHeightWithModel:(id _Nullable)model;
/// 具体由子类进行复写【数据定高】【如果所传参数为基本数据类型，那么包装成对象NSNumber进行转化承接】
-(CGFloat)heightForFooterInSection:(id _Nullable)model;
/// 具体由子类进行复写【数据定高】【如果所传参数为基本数据类型，那么包装成对象NSNumber进行转化承接】
-(CGFloat)heightForHeaderInSection:(id _Nullable)model;
/// 具体由子类进行复写【数据尺寸】【如果所传参数为基本数据类型，那么包装成对象NSNumber进行转化承接】
-(CGSize)viewSizeWithModel:(id _Nullable)model;
/// 具体由子类进行复写【数据Frame】【如果所传参数为基本数据类型，那么包装成对象NSNumber进行转化承接】
-(CGRect)viewFrameWithModel:(id _Nullable)model;
/// 具体由子类进行复写【FrameX的变化量】【如果所传参数为基本数据类型，那么包装成对象NSNumber进行转化承接】
-(CGFloat)viewChangeXWithModel:(id _Nullable)model;
/// 具体由子类进行复写【FrameY的变化量】【如果所传参数为基本数据类型，那么包装成对象NSNumber进行转化承接】
-(CGFloat)viewChangeYWithModel:(id _Nullable)model;
/// 具体由子类进行复写【FrameWidth的变化量】【如果所传参数为基本数据类型，那么包装成对象NSNumber进行转化承接】
-(CGFloat)viewChangeWidthWithModel:(id _Nullable)model;
/// 具体由子类进行复写【FrameHeight的变化量】【如果所传参数为基本数据类型，那么包装成对象NSNumber进行转化承接】
-(CGFloat)viewChangeHeightWithModel:(id _Nullable)model;
/// 具体由子类进行复写【数据尺寸】【如果所传参数为基本数据类型，那么包装成对象NSNumber进行转化承接】
/// UICollectionViewDelegateFlowLayout
-(CGSize)collectionReusableViewSizeWithModel:(id _Nullable)model;
/// 数据（字符串）定宽
-(CGFloat)widthByData:(UIViewModel *_Nonnull)data;
/// 数据（字符串）定高
-(CGFloat)heightByData:(UIViewModel *_Nonnull)data;
#pragma mark —— 一些功能性的
/// 初始化的时候最好传入一个size值将其子视图的大小固定死。因为只有当父视图有Size的情况下子视图才会展开，从而避免刷新约束时候的一系列麻烦事。
-(instancetype)initWithSize:(CGSize)thisViewSize;
/// 下拉刷新 （子类要进行覆写）
-(void)pullToRefresh;
/// 上拉加载更多 （子类要进行覆写）
-(void)loadMoreRefresh;
/// 获取绑定的数据源
-(UIViewModel *_Nullable)getViewModel;</string>
	<key>IDECodeSnippetIdentifier</key>
	<string>660A9F6A-AFB3-4778-B912-DF53C91A1139</string>
	<key>IDECodeSnippetLanguage</key>
	<string>Xcode.SourceCodeLanguage.Objective-C</string>
	<key>IDECodeSnippetPlatformFamily</key>
	<string>iphoneos</string>
	<key>IDECodeSnippetSummary</key>
	<string>BaseViewProtocol的相关描述</string>
	<key>IDECodeSnippetTitle</key>
	<string>init.BaseViewProtocol</string>
	<key>IDECodeSnippetUserSnippet</key>
	<true/>
	<key>IDECodeSnippetVersion</key>
	<integer>2</integer>
</dict>
</plist>
