<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDECodeSnippetCompletionPrefix</key>
	<string>init.UITableView</string>
	<key>IDECodeSnippetCompletionScopes</key>
	<array>
		<string>All</string>
	</array>
	<key>IDECodeSnippetContents</key>
	<string>
&lt;
BaseViewProtocol
,UITableViewDelegate
,UITableViewDataSource
&gt;

/// UI
@property(nonatomic,strong)UITableView *tableView;
/// Data
@property(nonatomic,strong)NSMutableArray &lt;UITableViewCell *&gt;*tbvCellMutArr;
@property(nonatomic,strong)NSMutableArray &lt;UIViewModel *&gt;*dataMutArr;

///下拉刷新 （子类要进行覆写）
-(void)pullToRefresh{
    [NSObject feedbackGenerator];//震动反馈
    @jobs_weakify(self)
    [self withdrawBanklist:^(NSArray *data) {
        @jobs_strongify(self)
        if (data.count) {
            [self endRefreshing:self.tableView];
        }else{
            [self endRefreshingWithNoMoreData:self.tableView];
        }
        /// 在reloadData后做的操作，因为reloadData刷新UI是在主线程上，那么就在主线程上等待
        @jobs_weakify(self)
        [self getMainQueue:^{
            @jobs_strongify(self)
        }];
    }];
}
///上拉加载更多 （子类要进行覆写）
-(void)loadMoreRefresh{
    [self pullToRefresh];
}
#pragma mark —— UITableViewDelegate,UITableViewDataSource
- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView {
    return self.tableViewCellMutArr.count;
}

- (CGFloat)tableView:(UITableView *)tableView
heightForRowAtIndexPath:(NSIndexPath *)indexPath{
    switch (indexPath.section) {
        case 0:
            return [BaiShaETProjMembersTBVCell2 cellHeightWithModel:nil];
            break;
        case 1:
        case 2:
            return [BaiShaETProjMembersTBVCell1 cellHeightWithModel:nil];
            break;
        default:
            return [BaseTableViewCell cellHeightWithModel:nil];
            break;
    }
}

- (void)tableView:(UITableView *)tableView
didSelectRowAtIndexPath:(NSIndexPath *)indexPath{
    
}

- (NSInteger)tableView:(UITableView *)tableView
 numberOfRowsInSection:(NSInteger)section{
    return self.tableViewCellMutArr[section].count;
}

- (UITableViewCell *)tableView:(UITableView *)tableView
         cellForRowAtIndexPath:(NSIndexPath *)indexPath{
    BaseTableViewCell *cell = (BaseTableViewCell *)self.tableViewCellMutArr[indexPath.section][indexPath.row];
    switch (indexPath.section) {
        case 0:
            [cell richElementsInCellWithModel:nil];
            break;
        case 1:
        case 2:
            [cell richElementsInCellWithModel:self.dataMutArr[indexPath.section - 1][indexPath.row]];
            break;
        default:
            [cell richElementsInCellWithModel:nil];
            break;
    }return cell;
}

- (CGFloat)tableView:(UITableView *)tableView
heightForHeaderInSection:(NSInteger)section{
    return section ? 0 : JobsWidth(10);
}

- (CGFloat)tableView:(UITableView *)tableView
heightForFooterInSection:(NSInteger)section{
    return section ? 0 : JobsWidth(10);
}

- (UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section{
    
//    DDPersonalCentreHeaderView *header = DDPersonalCentreHeaderView.jobsInitWithReuseIdentifier;
//    [headerView richElementsInViewWithModel:nil];
//    @weakify(self)
//    [headerView actionObjectBlock:^(id data) {
//
//    }];return headerView;
    
    return BaseTableViewHeaderView.new;
}

- (nullable UIView *)tableView:(UITableView *)tableView viewForFooterInSection:(NSInteger)section{
    return BaseTableViewHeaderView.new;
}

- (void)tableView:(UITableView *)tableView
  willDisplayCell:(UITableViewCell *)cell
forRowAtIndexPath:(NSIndexPath *)indexPath{
    
    [tableView hideSeparatorLineAtLast:indexPath
                                  cell:cell];
    cell.img = KIMG(@"向右的箭头（大）");
    @jobs_weakify(self)
    [cell customAccessoryView:^(id data) {
        @jobs_strongify(self)
        BaiShaETProjMembersTBVCell1 *cell = (BaiShaETProjMembersTBVCell1 *)data;
        NSLog(@"MMM - %ld",cell.index);
    }];
    
    [BaseTableViewCell tableView:tableView
     makeSectionFirstAndLastCell:cell
                     roundCorner:JobsWidth(8)
                              dx:JobsWidth(1)
                              dy:0
                     atIndexPath:indexPath];
}
#pragma mark —— lazyLoad
-(UITableView *)tableView{
    if (!_tableView) {
        _tableView = UITableView.initWithStyleGrouped;
        _tableView.backgroundColor = AppMainCor_02;
        _tableView.separatorStyle = UITableViewCellSeparatorStyleSingleLine;
        _tableView.showsVerticalScrollIndicator = NO;
        _tableView.delegate = self;
        _tableView.dataSource = self;
        _tableView.tableHeaderView = UIView.new;
        _tableView.tableFooterView = UIView.new;
        _tableView.separatorColor = HEXCOLOR(0xEEEEEE);
        _tableView.contentInset = UIEdgeInsetsMake(JobsWidth(20), 0, 0, 0);
        [_tableView registerTableViewClass];
        if(@available(iOS 11.0, *)) {
            _tableView.contentInsetAdjustmentBehavior = UIScrollViewContentInsetAdjustmentNever;
        }else{
            SuppressWdeprecatedDeclarationsWarning(self.automaticallyAdjustsScrollViewInsets = NO);
        }
        
        {
            MJRefreshConfigModel *refreshConfigHeader = MJRefreshConfigModel.new;
            refreshConfigHeader.stateIdleTitle = Internationalization(@"下拉可以刷新");
            refreshConfigHeader.pullingTitle = Internationalization(@"下拉可以刷新");
            refreshConfigHeader.refreshingTitle = Internationalization(@"松开立即刷新");
            refreshConfigHeader.willRefreshTitle = Internationalization(@"刷新数据中");
            refreshConfigHeader.noMoreDataTitle = Internationalization(@"下拉可以刷新");

            MJRefreshConfigModel *refreshConfigFooter = MJRefreshConfigModel.new;
            refreshConfigFooter.stateIdleTitle = @"";
            refreshConfigFooter.pullingTitle = @"";
            refreshConfigFooter.refreshingTitle = @"";
            refreshConfigFooter.willRefreshTitle = @"";
            refreshConfigFooter.noMoreDataTitle = @"";

            self.refreshConfigHeader = refreshConfigHeader;
            self.refreshConfigFooter = refreshConfigFooter;

            _tableView.mj_header = self.mjRefreshNormalHeader;
            _tableView.mj_header.automaticallyChangeAlpha = YES;//根据拖拽比例自动切换透明度
        }
        
        {
            _tableView.ly_emptyView = [LYEmptyView emptyViewWithImageStr:@"暂无数据"
                                                                titleStr:@"暂无数据"
                                                               detailStr:@""];
            
            _tableView.ly_emptyView.titleLabTextColor = KLightGrayColor;
            _tableView.ly_emptyView.contentViewOffset = -JobsWidth(180);
            _tableView.ly_emptyView.titleLabFont = [UIFont systemFontOfSize:JobsWidth(16) weight:UIFontWeightMedium];
        }
        
        {/// 设置tabAnimated相关属性
            // 可以不进行手动初始化，将使用默认属性
            _tableView.tabAnimated = [TABTableAnimated animatedWithCellClass:DDSignlePeopleCell.class
                                                                  cellHeight:74.5];
            _tableView.tabAnimated.superAnimationType = TABViewSuperAnimationTypeShimmer;
            [_tableView tab_startAnimation];   // 开启动画
        }
        
        [self.view addSubview:_tableView];
        [_tableView mas_makeConstraints:^(MASConstraintMaker *make) {
            if (self.setupNavigationBarHidden &amp;&amp; self.gk_statusBarHidden) {// 系统、GK均隐藏
                make.edges.equalTo(self.view);
            }else{
                if (!self.setupNavigationBarHidden &amp;&amp; self.gk_statusBarHidden) {// 用系统的导航栏
                    make.top.equalTo(self.view).offset(JobsNavigationBarAndStatusBarHeight(nil));
                }
                
                if (self.setupNavigationBarHidden &amp;&amp; !self.gk_statusBarHidden) {// 用GK的导航栏
                    make.top.equalTo(self.gk_navigationBar.mas_bottom);
                }
                
                make.left.right.bottom.equalTo(self.view);
            }
        }];
    }return _tableView;
}

-(NSMutableArray&lt;UITableViewCell *&gt; *)tbvCellMutArr{
    if (!_tbvCellMutArr) {
        _tbvCellMutArr = NSMutableArray.array;
        [_tbvCellMutArr addObject:[CasinoAgencyTBVCell1 cellWithTableView:self.tableView]];
        [_tbvCellMutArr addObject:[CasinoAgencyTBVCell2 cellWithTableView:self.tableView]];
        [_tbvCellMutArr addObject:[CasinoAgencyTBVCell3 cellWithTableView:self.tableView]];
        [_tbvCellMutArr addObject:[CasinoAgencyTBVCell4 cellWithTableView:self.tableView]];
    }return _tbvCellMutArr;
}

-(NSMutableArray&lt;UIViewModel *&gt; *)dataMutArr{
    if (!_dataMutArr) {
        _dataMutArr = NSMutableArray.array;
    }return _dataMutArr;
}</string>
	<key>IDECodeSnippetIdentifier</key>
	<string>D73EFE8C-AC74-45A3-A43D-2757D8F759F9</string>
	<key>IDECodeSnippetLanguage</key>
	<string>Xcode.SourceCodeLanguage.Objective-C</string>
	<key>IDECodeSnippetPlatformFamily</key>
	<string>iphoneos</string>
	<key>IDECodeSnippetSummary</key>
	<string>创建UITableView的相关子类</string>
	<key>IDECodeSnippetTitle</key>
	<string>init.UITableView</string>
	<key>IDECodeSnippetUserSnippet</key>
	<true/>
	<key>IDECodeSnippetVersion</key>
	<integer>2</integer>
</dict>
</plist>
